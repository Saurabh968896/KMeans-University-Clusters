# -*- coding: utf-8 -*-
"""app.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Awhr5Gf9DQoMkx_WvtM6w_VHHrPuqLd3
"""

import streamlit as st
import pandas as pd
import numpy as np
import pickle

# Load the saved KMeans model
with open("kmeans_model.pkl", "rb") as f:
    kmeans_model = pickle.load(f)

# Load dataset (for reference or displaying clusters)
data = pd.read_csv("Universities_dataset.csv")

# Page config
st.set_page_config(page_title="University Clustering App", page_icon="🎓", layout="wide")

# Title
st.title("🎓 University Clustering using K-Means")
st.markdown(
    """
    This app uses **K-Means Clustering** to group universities into clusters
    based on their academic and financial features.
    """
)

# Sidebar for input
st.sidebar.header("🔎 Enter University Details")
sat = st.sidebar.number_input("Average SAT Score", min_value=800, max_value=1600, step=10)
top10 = st.sidebar.slider("Top 10% Students (%)", 1, 100, 50)
accept = st.sidebar.slider("Acceptance Rate (%)", 1, 100, 50)
sfratio = st.sidebar.slider("Student-Faculty Ratio", 1, 30, 10)
expenses = st.sidebar.number_input("Annual Expenses ($)", min_value=5000, max_value=80000, step=1000)
gradrate = st.sidebar.slider("Graduation Rate (%)", 1, 100, 70)

# Button for prediction
if st.sidebar.button("Predict Cluster"):
    # Prepare input
    new_data = np.array([[sat, top10, accept, sfratio, expenses, gradrate]])
    cluster = kmeans_model.predict(new_data)[0]

    st.success(f"🏫 This university belongs to **Cluster {cluster}**")

    # Show similar universities from dataset
    st.subheader("Universities in the same cluster")
    cluster_univs = data.copy()
    cluster_univs["Cluster"] = kmeans_model.labels_
    st.dataframe(cluster_univs[cluster_univs["Cluster"] == cluster])

# Display dataset
with st.expander("📊 View Original Dataset"):
    st.dataframe(data)

st.markdown("---")
st.caption("Built with ❤️ using Streamlit")







